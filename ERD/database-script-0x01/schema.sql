-- User
CREATE TABLE users (
    -- Internal, fast, auto-incrementing key for relationships
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,

    -- Public, secure, unique identifier for APIs and URLs
    -- Generated by the application (e.g., using the `uuid` library) and stored as binary
    user_id BINARY(16) UNIQUE NOT NULL,

    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    phone_number VARCHAR(20),
    role ENUM('guest', 'host', 'admin') NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    deleted_at TIMESTAMP NULL
);
-- Property
CREATE TABLE properties (
    -- Internal Primary Key
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    -- Public Unique Identifier
    property_id BINARY(16) UNIQUE NOT NULL,

    -- Foreign Key to the host's INTERNAL ID (users.id)
    host_id BIGINT UNSIGNED NOT NULL,

    name VARCHAR(255) NOT NULL,
    description TEXT NOT NULL,
    location VARCHAR(255) NOT NULL,
    price_per_night DECIMAL(10, 2) NOT NULL, -- More precise definition for currency
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deleted_at TIMESTAMP NULL,

    -- Define the foreign key relationship
    FOREIGN KEY (host_id) REFERENCES users(id)
);
-- Create an index on the host_id for faster queries like "find all properties by host"
CREATE INDEX idx_properties_host_id ON properties(host_id);

-- Booking
CREATE TABLE bookings (
    -- Internal Primary Key
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    -- Public Unique Identifier
    booking_id BINARY(16) UNIQUE NOT NULL,

    -- Foreign Keys to the INTERNAL IDs
    property_id BIGINT UNSIGNED NOT NULL,
    user_id BIGINT UNSIGNED NOT NULL,

    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL,
    status ENUM('pending', 'confirmed', 'cancelled') NOT NULL DEFAULT 'pending', -- 'canceled' corrected to 'cancelled'
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    -- Define foreign key relationships
    FOREIGN KEY (property_id) REFERENCES properties(id),
    FOREIGN KEY (user_id) REFERENCES users(id)
);
-- Indexes for common queries
CREATE INDEX idx_bookings_property_id ON bookings(property_id);
CREATE INDEX idx_bookings_user_id ON bookings(user_id);
CREATE INDEX idx_bookings_dates ON bookings(start_date, end_date);

-- Payment
CREATE TABLE payments (
    -- Internal Primary Key
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    -- Public Unique Identifier
    payment_id BINARY(16) UNIQUE NOT NULL,

    -- Foreign Key to the INTERNAL ID
    booking_id BIGINT UNSIGNED NOT NULL,

    amount DECIMAL(10, 2) NOT NULL,
    payment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    payment_method ENUM('credit_card', 'paypal', 'stripe') NOT NULL,

    -- Define the foreign key relationship
    FOREIGN KEY (booking_id) REFERENCES bookings(id)
);
-- Index for looking up payments for a booking
CREATE INDEX idx_payments_booking_id ON payments(booking_id);

-- Review
CREATE TABLE reviews (
    -- Internal Primary Key
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    -- Public Unique Identifier
    review_id BINARY(16) UNIQUE NOT NULL,

    -- Foreign Keys to the INTERNAL IDs
    property_id BIGINT UNSIGNED NOT NULL,
    user_id BIGINT UNSIGNED NOT NULL,

    rating TINYINT UNSIGNED NOT NULL CHECK (rating >= 1 AND rating <= 5), -- More efficient than INT for small numbers
    comment TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    deleted_at TIMESTAMP NULL,

    -- Define foreign key relationships
    FOREIGN KEY (property_id) REFERENCES properties(id),
    FOREIGN KEY (user_id) REFERENCES users(id),

    -- A user should only be able to review a property once
    UNIQUE KEY unique_review (property_id, user_id)
);
-- Indexes for common queries
CREATE INDEX idx_reviews_property_id ON reviews(property_id);
CREATE INDEX idx_reviews_user_id ON reviews(user_id);

-- Message
CREATE TABLE messages (
    -- Internal Primary Key
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    -- Public Unique Identifier
    message_id BINARY(16) UNIQUE NOT NULL,

    -- Foreign Keys to the INTERNAL IDs of the sender and recipient
    sender_id BIGINT UNSIGNED NOT NULL,
    recipient_id BIGINT UNSIGNED NOT NULL,

    message_body TEXT NOT NULL,
    sent_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    -- Optional: Add a field for read receipts
    -- read_at TIMESTAMP NULL,
    deleted_at TIMESTAMP NULL,

    -- Define foreign key relationships
    FOREIGN KEY (sender_id) REFERENCES users(id),
    FOREIGN KEY (recipient_id) REFERENCES users(id)
);
-- Indexes for fetching conversations
CREATE INDEX idx_messages_sender_recipient ON messages(sender_id, recipient_id, sent_at);
CREATE INDEX idx_messages_recipient_sender ON messages(recipient_id, sender_id, sent_at);